import tkinter as tk
from tkinter import messagebox
import numpy as np
import pandas as pd
from sklearn.preprocessing import LabelEncoder
from scipy import stats
import string

# Create main window
root = tk.Tk()
root.title("Password Generator")

# Initialize DataFrame to store passwords
password_data = pd.DataFrame(columns=["Password"])

# Function to update listbox
def update_listbox():
    listbox.delete(0, tk.END)
    for i, row in password_data.iterrows():
        listbox.insert(tk.END, row['Password'])  # Use square brackets, not parentheses

# Function to generate a random password using NumPy
def generate_password(length=10):
    characters = list(string.ascii_letters + string.digits + string.punctuation)
    return ''.join(np.random.choice(characters, size=length).tolist())

# Add password
def add_password():
    password = generate_password()
    global password_data
    password_data = password_data.append({"Password": password}, ignore_index=True)

    # Optional: Encode password lengths using LabelEncoder
    lengths = password_data["Password"].apply(len)
    encoded = LabelEncoder().fit_transform(lengths)
    print("Encoded password lengths:", list(encoded))

    update_listbox()

# Delete selected password
def delete_password():
    selected = listbox.curselection()
    if not selected:
        messagebox.showwarning("Selection Error", "Please select a password to delete.")
        return
    global password_data
    index = selected[0]
    password_data = password_data.drop(password_data.index[index]).reset_index(drop=True)
    update_listbox()

# GUI Layout
entry_label = tk.Label(root, text="Generated Passwords", font=("Arial", 12))
entry_label.pack(pady=5)

listbox = tk.Listbox(root, width=40, height=10, font=("Arial", 12))
listbox.pack(pady=5)

add_btn = tk.Button(root, text="Add Password", width=20, command=add_password)
add_btn.pack(pady=2)

delete_btn = tk.Button(root, text="Delete Password", width=20, command=delete_password)
delete_btn.pack(pady=2)

# Start the app
root.mainloop()
